[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "ts-observing"
description = "Specifying observations at Rubin Observatory"
keywords = ["lsst"]
dependencies = [
    "pydantic >= 2.0, < 3.0",
    "pyyaml",
]
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dynamic = ["version"]

[tool.setuptools.packages.find]
where = ["python"]

[tool.setuptools.package-data]
"lsst.ts.observing" = ["py.typed"]

[tool.black]
line-length = 110
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 110

[tool.setuptools_scm]
write_to = "python/lsst/ts/observing/version.py"

[tool.lsst_versions]
# Needed for the mypy action.
write_to = "python/lsst/ts/observing/version.py"

[tool.pytest.ini_options]

[tool.pydocstyle]
convention = "numpy"
# Our coding style does not require docstrings for magic methods (D105)
# Our docstyle documents __init__ at the class level (D107)
# We allow methods to inherit docstrings and this is not compatible with D102.
# Docstring at the very first line is not required
# D200, D205 and D400 all complain if the first sentence of the docstring does
# not fit on one line.
add-ignore = ["D107", "D105", "D102", "D100", "D200", "D205", "D400"]

[tool.ruff]
target-version = "py311"
line-length = 110
exclude = [
    "__init__.py",
    "doc/conf.py",
]

[tool.ruff.lint]
ignore = [
    "N999",  # Invalid module name
    "D107",  # Document __init__ at class level.
    "D105",  # Do not require docstrings on magic methods.
    "D102",  # Can inherit docstrings.
    "D100",  # Modules are not required to include documentation.
    "D205",  # Does not understand if a summary is two lines long.
]
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "N",  # pep8-naming
    "W",  # pycodestyle
    "D",  # pydocstyle
    "UP",  # pyupgrade
]

[tool.ruff.lint.pycodestyle]
max-doc-length = 79

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.numpydoc_validation]
checks = [
    "all",  # All except the rules listed below.
    "SA01",  # See Also section.
    "EX01",  # Example section.
    "SS06",  # Summary can go into second line.
    "GL01",  # Summary text can start on same line as """
    "GL08",  # Do not require docstring.
    "ES01",  # No extended summary required.
    "RT01",  # Unfortunately our @property trigger this.
    "RT02",  # Does not want named return value. DM style says we do.
    "SS05",  # pydocstyle is better at finding infinitive verb.
]
